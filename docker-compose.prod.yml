services:
  web:
    build:
      context: .
      dockerfile: ./docker/production/nginx/Dockerfile
      args:
        VITE_REVERB_APP_KEY: ${VITE_REVERB_APP_KEY}
        VITE_REVERB_HOST: ${VITE_REVERB_HOST}
        VITE_REVERB_PORT: ${VITE_REVERB_PORT}
        VITE_REVERB_SCHEME: ${VITE_REVERB_SCHEME}
    container_name: nginx
    restart: unless-stopped
    volumes:
      - laravel-storage-production:/var/www/storage:ro # This volume stores persistent data like uploaded files and cache.
      - laravel-public-assets:/var/www/public/build
    networks:
      - docker-network
    depends_on:
      php-fpm:
        condition: service_healthy # Wait for php-fpm health check
      reverb:
        condition: service_started
    env_file:
      - .env.production
  php-fpm: &php-base
    build:
      context: .
      dockerfile: ./docker/common/php-fpm/Dockerfile
      target: production # Use the 'production' stage in the Dockerfile
    restart: unless-stopped
    container_name: app
    volumes:
      - laravel-storage-production:/var/www/storage # Mount the storage volume
      - laravel-public-assets:/var/www/public/build:ro
    env_file:
      - .env.production
    networks:
      - docker-network
    healthcheck:
      test: ['CMD-SHELL', 'php-fpm-healthcheck || exit 1']
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      postgres:
        condition: service_healthy
  postgres:
    image: postgres:17.5
    user: postgres
    container_name: pg-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    healthcheck:
      test: ['CMD', 'pg_isready']
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres-data-production:/var/lib/postgresql/data
    networks:
      - docker-network
  redis:
    image: redis:7.4.5-alpine3.21
    container_name: redis
    restart: unless-stopped
    networks:
      - docker-network
    env_file:
      - .env.production
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 3
  reverb:
    <<: *php-base
    container_name: reverb
    restart: unless-stopped
    command: sh -c "php artisan reverb:start"
    env_file:
      - .env.production
    volumes:
      - laravel-public-assets:/var/www/public/build:ro
    networks:
      - docker-network
    depends_on:
      php-fpm:
        condition: service_healthy
  queue-worker:
    <<: *php-base
    container_name: queue-worker
    restart: unless-stopped
    command: sh -c "php artisan queue:work"
    env_file:
      - .env.production
    volumes:
      - laravel-storage-production:/var/www/storage:ro
      - laravel-public-assets:/var/www/public/build:ro
    networks:
      - docker-network
    depends_on:
      php-fpm:
        condition: service_healthy
  scheduler:
    <<: *php-base
    container_name: scheduler
    restart: unless-stopped
    command: sh -c "php artisan schedule:work"
    env_file:
      - .env.production
    volumes:
      - laravel-storage-production:/var/www/storage:ro
      - laravel-public-assets:/var/www/public/build:ro
    networks:
      - docker-network
    depends_on:
      php-fpm:
        condition: service_healthy
volumes:
  postgres-data-production:
  laravel-storage-production:
  laravel-public-assets:
networks:
  docker-network:
    driver: bridge
